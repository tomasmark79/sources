# qpwgraph Pipeline
#
workflow:
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - when: never

stages:
  - container
  - build

variables:
  FDO_UPSTREAM_REPO: 'rncbc/qpwgraph'

include:
  - project: 'freedesktop/ci-templates'
    file: '/templates/fedora.yml'
  - project: 'freedesktop/ci-templates'
    file: '/templates/ubuntu.yml'

container_fedora:
  stage: container
  extends:
    - .fedora
    - .fdo.container-build@fedora
  variables:
    GIT_STRATEGY: none # no need to pull the whole tree for rebuilding the image

container_ubuntu:
  stage: container
  extends:
    - .ubuntu
    - .fdo.container-build@ubuntu
  variables:
    GIT_STRATEGY: none # no need to pull the whole tree for rebuilding the image

.fedora:
  variables:
    # Update this tag when you want to trigger a rebuild
    FDO_DISTRIBUTION_TAG: '2022-12-19.0'
    FDO_DISTRIBUTION_VERSION: '37'
    FDO_DISTRIBUTION_PACKAGES: >-
      gcc
      gcc-c++
      findutils
      pkgconf
      cmake
      qt6-qtbase-devel
      qt6-qttools-devel
      qt6-qtsvg-devel
      alsa-lib-devel
      pipewire-devel

.ubuntu:
  variables:
    # Update this tag when you want to trigger a rebuild
    FDO_DISTRIBUTION_TAG: '2022-12-19.0'
    FDO_DISTRIBUTION_VERSION: '22.10'
    FDO_DISTRIBUTION_PACKAGES: >-
      debhelper-compat
      gcc
      g++
      findutils
      pkg-config
      cmake
      qt6-base-dev
      qt6-tools-dev
      libqt6svg6-dev
      libasound2-dev
      libpipewire-0.3-dev

.build:
  script:
    - echo "Building application..."
    - cmake -DCMAKE_INSTALL_PREFIX=$CI_PROJECT_DIR/usr/local
            -B build
    - cmake --build build
    - cmake --install build
    - echo "Build complete."
  artifacts:
    name: qpwgraph-$CI_COMMIT_SHORT_SHA
    paths:
      - usr/local/bin/qpwgraph

build_fedora:
  extends:
    - .fedora
    - .fdo.distribution-image@fedora
    - .build
  stage: build

build_ubuntu:
  extends:
    - .ubuntu
    - .fdo.distribution-image@ubuntu
    - .build
  stage: build
